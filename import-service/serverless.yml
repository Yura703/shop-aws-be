app:  import-service
service: import-service
frameworkVersion: '3'
useDotenv: true

custom:
  bucketName: yura703-task5
  webpack: 
    webpackConfig:  './webpack.config.js'  # Имя файла конфигурации 
    includeModules: true
    # webpack includeModules:  false  # Конфигурация модулей узла для упаковки 
    # packager:  'npm'  # Packager, который будет использоваться для упаковки ваших внешних модулей 
    # excludeFiles:  src/** /*.test.js  # Предоставить glob для игнорируемых файлов  

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-1 
  lambdaHashingVersion: 20201221

  iamRoleStatements:
    - Effect: Allow
      Action: s3:ListBucket
      Resource:
        - arn:aws:s3:::yura703-task5
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        - arn:aws:s3:::yura703-task5/*
    - Effect: Allow
      Action: sqs:*
      Resource:
        - Fn::GetAtt: [SQSQueue, Arn]
    - Effect: Allow
      Action: sns:*
      Resource:
        Ref: SNSTopic      

  environment:
    SQL_URL:
      Ref: SQSQueue
    SNS_ARN:
      Ref: SNSTopic       

plugins:
  - serverless-webpack
  - serverless-jest-plugin  
  - serverless-plugin-common-excludes # this should go before serverless-plugin-include-dependencies
  - serverless-plugin-include-dependencies 

package:
  patterns:
    - '!node_modules/**' # no need to add this, this plugin does it for you
  individually: true
  excludeDevDependencies: false

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: yura703-queue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: yura703-topic
    SNSHighCountSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: lyurik1978@gmail.com 
        Protocol: email
        TopicArn:
          Ref: SNSTopic   
        FilterPolicy:
          countCategory:
            - High   
    SNSLowCountSubscription:
      Type: AWS::SNS::Subscription
      Properties:        
        Endpoint: lyurik1978@tut.by 
        Protocol: email
        TopicArn:
          Ref: SNSTopic
        FilterPolicy:
          countCategory:
            - Low        

functions:
  importProductsFile:
    handler: src/functions/importProductsFile.importProductsFile
    events:
      - http:
          path: /import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true

  importFileParser:
    handler: src/functions/importFileParser.importFileParser
    events:
      - s3: 
        bucket: yura703-task5
        event: s3:ObjectCreated:*
        rules:
          - prefix: uploaded/
        existing: true       

  catalogBatchProcess:
    handler: functions/catalogBatchProcess.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn    
  